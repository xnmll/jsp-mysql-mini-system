/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.28
 * Generated at: 2018-05-02 12:36:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import com.mysql.jdbc.PreparedStatement;
import utils.JdbcUtils;
import java.sql.Connection;
import java.util.*;

public final class AddAnnouncement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("utils.JdbcUtils");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("com.mysql.jdbc.PreparedStatement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>添加公告</title>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0\">\n");
      out.write("<link href=\"resources/style/style.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/jquery.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/jquery-ui.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("\tsrc=\"resources/js/jquery-ui-1.10.3.custom.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/jquery.validate.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/ProvinceAndCity.js\"></script>\n");
      out.write("<link href=\"resources/style/jquery-ui.css\" rel=\"stylesheet\"\n");
      out.write("\ttype=\"text/css\" />\n");
      out.write("</head>\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("$(function() {\n");
      out.write("\t$(\"#pubdate\").datepicker({\n");
      out.write("\t\tchangeMonth : true,\n");
      out.write("\t\tchangeYear : true,\n");
      out.write("\t\tdateFormat : 'yy-mm-dd'\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("<body class=\"loginbody\">\n");
      out.write("\t<div class=\"dataEye\">\n");
      out.write("\t\t<div class=\"loginbox registbox\">\n");
      out.write("\t\t\t<div class=\"login-content reg-content\">\n");
      out.write("\t\t\t\t<div class=\"loginbox-title\">\n");
      out.write("\t\t\t\t\t<h3>添加公告</h3>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<form id=\"signupForm\" action=\"addAnnouncementAction\"\n");
      out.write("\t\t\t\t\tmethod=\"post\">\n");
      out.write("\t\t\t\t\t<div class=\"login-error\"></div>\n");
      out.write("\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t<label for=\"title\">标题</label> <input type=\"text\" value=\"\"\n");
      out.write("\t\t\t\t\t\t\tclass=\"input-text-user noPic input-click\" name=\"title\" id=\"title\"\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"标题\" required>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<br/>\n");
      out.write("\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t<label for=\"pubdate\">发布日期</label> <input type=\"text\"\n");
      out.write("\t\t\t\t\t\t\tclass=\"input-text-user noPic input-click\" name=\"pubdate\"\n");
      out.write("\t\t\t\t\t\t\tid=\"pubdate\" placeholder=\"发布日期\" required>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<br>\n");
      out.write("\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t<label for=\"announcement\">公告内容</label><br/>\n");
      out.write("\t\t\t\t\t\t<textarea id=\"\" rows=10 cols=45 class=\"textarea easyui-validatebox\" name=\"announcement\" id=\"announcement\"></textarea>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<br/><br/><br/><br/><br/><br/><br/><br/>\n");
      out.write("\t\t\t\t\t<div class=\"row btnArea\">\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"添加\" class=\"login-btn\" id=\"submit\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"go-regist\">\n");
      out.write("\t\t\t\t<a href=\"ManageAnnouncement.jsp\" class=\"link\">返回</a>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
